var f=Object.defineProperty;var g=(c,e,t)=>e in c?f(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var s=(c,e,t)=>(g(c,typeof e!="symbol"?e+"":e,t),t);import{D as h}from"./QueryParams-83e678cb.browser.esm-LTENBzys.js";import{cE as w,a5 as W,D as T,cR as b,a6 as y,b_ as S,B as i,bn as A,b7 as E,s as p,T as N}from"./index-0T11UOAg.js";import{a as R,b as U,G as k,C as M}from"./contract-appuri-c5ea176e.browser.esm-2sn-dwGV.js";import{C as I}from"./contract-interceptor-d7b164a7.browser.esm-amNiAGmN.js";import{C as x,D as F,a as _}from"./contract-owner-50abb8cd.browser.esm-_p1tQHvJ.js";import{C as D}from"./contract-platform-fee-9ec7bfc5.browser.esm-pm4iAqAu.js";import{C as L}from"./contract-roles-295c2434.browser.esm-MrfS3Zc3.js";import{C as v}from"./contract-sales-4df7a638.browser.esm-FYBVyfuS.js";import{D as B}from"./drop-claim-conditions-6010745a.browser.esm-1acMIwaL.js";import{S as O}from"./erc-721-standard-e6dc10bd.browser.esm-IF8yCe7s.js";import{a as d}from"./erc-721-73df8a80.browser.esm-gkU292lP.js";import{P as G}from"./thirdweb-checkout-00fd21c6.browser.esm-K0E9tNIp.js";import"./setErc20Allowance-3795a3d6.browser.esm-oAahzjIT.js";import"./index-S9by4JaH.js";import"./assertEnabled-528581b6.browser.esm-rgQcVLeZ.js";const m=class m extends O{constructor(t,r,a){let n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},o=arguments.length>4?arguments[4]:void 0,l=arguments.length>5?arguments[5]:void 0,C=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new W(t,r,o,n,a);super(C,a,l);s(this,"createBatch",p(async(t,r)=>this.erc721.lazyMint.prepare(t,r)));s(this,"claimTo",p(async(t,r,a)=>this.erc721.claimTo.prepare(t,r,a)));s(this,"claim",p(async(t,r)=>this.erc721.claim.prepare(t,r)));s(this,"burn",p(async t=>this.erc721.burn.prepare(t)));this.abi=T.parse(o||[]),this.metadata=new R(this.contractWrapper,b,this.storage),this.app=new U(this.contractWrapper,this.metadata,this.storage),this.roles=new L(this.contractWrapper,m.contractRoles),this.royalties=new x(this.contractWrapper,this.metadata),this.sales=new v(this.contractWrapper),this.encoder=new y(this.contractWrapper),this.estimator=new k(this.contractWrapper),this.events=new M(this.contractWrapper),this.platformFees=new D(this.contractWrapper),this.interceptor=new I(this.contractWrapper),this.claimConditions=new B(this.contractWrapper,this.metadata,this.storage),this.signature=new d(this.contractWrapper,this.storage),this.revealer=new F(this.contractWrapper,this.storage,S.name,()=>this.erc721.nextTokenIdToMint()),this.signature=new d(this.contractWrapper,this.storage),this.owner=new _(this.contractWrapper),this.checkout=new G(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async totalSupply(){const[t,r]=await Promise.all([this.totalClaimedSupply(),this.totalUnclaimedSupply()]);return t.add(r)}async getAllClaimed(t){const r=i.from((t==null?void 0:t.start)||0).toNumber(),a=i.from((t==null?void 0:t.count)||h).toNumber(),n=Math.min((await this.totalClaimedSupply()).toNumber(),r+a);return await Promise.all(Array.from(Array(n).keys()).map(o=>this.get(o.toString())))}async getAllUnclaimed(t){const r=i.from((t==null?void 0:t.start)||0).toNumber(),a=i.from((t==null?void 0:t.count)||h).toNumber(),n=i.from(Math.max((await this.totalClaimedSupply()).toNumber(),r)),o=i.from(Math.min((await this.contractWrapper.read("nextTokenIdToMint",[])).toNumber(),n.toNumber()+a));return await Promise.all(Array.from(Array(o.sub(n).toNumber()).keys()).map(l=>this.erc721.getTokenMetadata(n.add(l).toString())))}async totalClaimedSupply(){return this.erc721.totalClaimedSupply()}async totalUnclaimedSupply(){return this.erc721.totalUnclaimedSupply()}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[A("transfer"),E])}async getClaimTransaction(t,r,a){return this.erc721.getClaimTransaction(t,r,a)}async prepare(t,r,a){return N.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:a})}async call(t,r,a){return this.contractWrapper.call(t,r,a)}};s(m,"contractRoles",w);let u=m;export{u as SignatureDrop};
